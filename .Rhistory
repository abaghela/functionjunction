library(functionjunction)
library(functionjunction)
library(functionjunction)
library(functionjunction)
library(functionjunction)
librar(devtools)
library(devtools)
devtools::install()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::install()
matrix(c(1,2,3,4,5,NA,6), nrow = 2)
matrix(c(1,2,3,4,5,NA,6,7), nrow = 2)
na2zero <- function(mat) {
mat[is.na(mat)] <- 0
return(dataframe)
}
matrix(c(1,2,3,4,5,NA,6,7), nrow = 2) %>% na2zero()
library(magrittr)
matrix(c(1,2,3,4,5,NA,6,7), nrow = 2) %>% na2zero()
na2zero <- function(mat) {
mat[is.na(mat)] <- 0
return(mat)
}
matrix(c(1,2,3,4,5,NA,6,7), nrow = 2) %>% na2zero()
data.frame(c(1,2,3,4,5,NA,6,7))
data.frame(hey = c(1,2,3,4,5,NA,6,7), hi = c(1,2,3,4,5,NA,6,7))
data.frame(hey = c(1,2,3,4,5,NA,6,7), hi = c(1,2,3,4,5,NA,6,7)) %>% na2zero()
data.frame(hey = c(1,2,3,4,5,NA,6,7), hi = c(1,2,3,4,5,NA,6,7), hey = c("a", "b", "c", "d", "e", "f")) %>% na2zero()
data.frame(hey = c(1,2,3,4,5,NA,6,7), hi = c(1,2,3,4,5,NA,6,7), hey = c("a", "b", "c", "d", "e", "f", "e")) %>% na2zero()
data.frame(hey = c(1,2,3,4,5,NA,6,7), hi = c(1,2,3,4,5,NA,6,7), hey = c("a", "b", "c", "d", "e", "f", "e", "f")) %>% na2zero()
data.frame(hey = c(1,2,3,4,5,NA,6,7), hi = c(1,2,3,4,5,NA,6,7), bye = c("a", "b", "c", "d", "e", "f", "e", "f")) %>% na2zero()
library(roxygen2)
roxygen2::block_get_tag()
devtools::document()
devtools::load_all()
devtools::check()
use_mit_license("Arjun Baghela")
devtools::check()
document()
mart <- biomaRt::useDataset("hsapiens_gene_ensembl", biomaRt::useMart("ensembl"))
document()
class(mart)
document()
use_testthat()
data.frame("hi" = c(1,2,3))
data.frame(hi = c(1,2,3))
ID = "ensembl_gene_id"
data.frame(var(ID) = c(1,2,3))
data.frame(!!var(ID) = c(1,2,3))
data.frame(sym(ID) = c(1,2,3))
data.frame(!!sym(ID) = c(1,2,3))
# Often biomart has multiple mappings to one gene or no mappings to a gene!
data.frame(c(1,2,3))
# Often biomart has multiple mappings to one gene or no mappings to a gene!
data.frame(1:4)
# Often biomart has multiple mappings to one gene or no mappings to a gene!
df <- data.frame(1:4)
df
names(df)
names(df) ID
names(df) <- ID
df
df
df[[ID]]
df[ID]
df[[ID]]
devtools::document()
devtools::install()
devtools::load_all()
devtools::install()
devtools::document()
devtools::load_all()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
#### Read in Reactome Pathway Hierarchy
react_pthwy_hier <- readr::read_csv("/mnt/analysis1/ImportantFiles/Human/enr_pathway_highest_level_clean_names.csv")
source('/mnt/analysis1/functionjunction/misc_scripts/react_path_hier.R', echo=TRUE)
source('/mnt/analysis1/functionjunction/misc_scripts/react_path_hier.R', echo=TRUE)
devtools::document()
react_pthwy_hier %>% readr::write_rds("./data/react_pthwy_hier.rds")
devtools::document()
devtools::install()
devtools::install()
source('/mnt/analysis1/functionjunction/misc_scripts/react_path_hier.R', echo=TRUE)
devtools::install()
source('/mnt/analysis1/functionjunction/misc_scripts/react_path_hier.R', echo=TRUE)
devtools::install()
# Saved locally
react_pthwy_hier <- readr::read_csv("/mnt/analysis1/ImportantFiles/Human/enr_pathway_highest_level_clean_names.csv")
react_pthwy_hier
?usethis::use_data()
# Saved locally
react_pthwy_hier <- readr::read_csv("/mnt/analysis1/ImportantFiles/Human/enr_pathway_highest_level_clean_names.csv")
usethis::use_data(react_pthwy_hier)
rm(list = ls())
devtools::install()
devtools::document()
devtools::install()
source('/mnt/analysis1/functionjunction/misc_scripts/make_exported_data.R', echo=TRUE)
source('/mnt/analysis1/functionjunction/misc_scripts/make_exported_data.R', echo=TRUE)
source('/mnt/analysis1/functionjunction/misc_scripts/make_exported_data.R', echo=TRUE)
devtools::document()
devtools::install()
?useDataset
?useMart
getEnsemblMart <- function() {
# This must be run prior to running mapGenes()
mart <- biomaRt::useDataset("hsapiens_gene_ensembl", biomaRt::useMart("ensembl"))
return(mart)
}
getEnsemblMart()
devtools::install()
library(devtools)
devtools::document()
devtools::install()
devtools::install()
